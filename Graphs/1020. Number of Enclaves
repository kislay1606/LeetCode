class Solution {
public:
    void dfs(vector<vector<int>>& grid, int row, int col, int delrow[], int delcol[], vector<vector<int>>&vis){
        int r=grid.size();
        int c=grid[0].size();

        vis[row][col]=1;

        for(int i=0; i<4; i++){
            int nrow=row+delrow[i];
            int ncol=col+delcol[i];

            if(nrow>=0 && nrow<r && ncol>=0 && ncol<c && vis[nrow][ncol]!=1 && grid[nrow][ncol]==1){
                dfs(grid,nrow,ncol,delrow,delcol,vis);
            }
        }
    }

    int numEnclaves(vector<vector<int>>& grid) {
        int r=grid.size();
        int c=grid[0].size();

        vector<vector<int>>vis(r,vector<int>(c,0));

        int delrow[]={-1,1,0,0};
        int delcol[]={0,0,-1,1};

        for(int i=0; i<c; i++){
            if(grid[0][i]==1 && vis[0][i]!=1){
                vis[0][i]=1;
                dfs(grid,0,i,delrow,delcol,vis);
            }
            if(grid[r-1][i]==1 && vis[r-1][i]!=1){
                vis[r-1][i]=1;
                dfs(grid,r-1,i,delrow,delcol,vis);
            }
        }

        for(int i=0; i<r; i++){
            if(grid[i][0]==1 && vis[i][0]!=1){
                vis[i][0]=1;
                dfs(grid,i,0,delrow,delcol,vis);
            }
            if(grid[i][c-1]==1 && vis[i][c-1]!=1){
                vis[i][c-1]=1;
                dfs(grid,i,c-1,delrow,delcol,vis);
            }
        }

        int count=0;

        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                if(grid[i][j]==1 && vis[i][j]!=1) count++;
            }
        }
        return count;
    }
};
