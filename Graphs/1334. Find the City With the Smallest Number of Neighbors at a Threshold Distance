class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>>dist(n,vector<int>(n,INT_MAX));
        for(auto it:edges){
            dist[it[0]][it[1]]=it[2];
            dist[it[1]][it[0]]=it[2];
        }
        for(int i=0; i<n; i++){
            dist[i][i]=0;
        }

        for(int via=0; via<n; via++){
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++){
                    if(dist[i][via]<INT_MAX && dist[via][j]<INT_MAX){
                        dist[i][j]=min(dist[i][j],dist[i][via]+dist[via][j]);
                    }
                }
            }
        }

        int resultcity=-1;
        int countcity=INT_MAX;

        for(int currcity=0; currcity<n; currcity++){
            int count=0;
            for(int adjcity=0; adjcity<n; adjcity++){
                if(dist[currcity][adjcity] <= distanceThreshold) count++;
            }

            if(count < countcity || (count==countcity && currcity>resultcity)){
                resultcity=currcity;
                countcity=count;
            }
        }
        return resultcity;
    }
};
