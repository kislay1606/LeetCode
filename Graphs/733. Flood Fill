class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int r=image.size();
        int c=image[0].size();

        vector<vector<int>>ans=image;

        int ogcolor=image[sr][sc];
        if(ogcolor==color) return image;

        queue<pair<int,int>>q;
        vector<vector<int>>vis(r,vector<int>(c,0));

        ans[sr][sc]=color;
        vis[sr][sc]=1;
        q.push({sr,sc});

        int delrow[]={-1,1,0,0};
        int delcol[]={0,0,-1,1};

        while(!q.empty()){
            int row=q.front().first;
            int col=q.front().second;

            ans[row][col]=color;
            q.pop();

            for(int i=0; i<4; i++){
                int nrow=row+delrow[i];
                int ncol=col+delcol[i];

                if(nrow>=0 && nrow<r && ncol>=0 && ncol<c && image[nrow][ncol]==ogcolor && vis[nrow][ncol]!=1){
                    vis[nrow][ncol]=1;
                    q.push({nrow,ncol});
                }
            }
        }
        return ans;
    }
};
