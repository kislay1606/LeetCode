class Solution {
public:
    void bfs(vector<vector<int>> &adj, vector<int>&vis, int i){
        int n=adj.size();

        queue<int>q;
        q.push(i);
        
        vis[i]=1;

        while(!q.empty()){
            int node=q.front();
            q.pop();     

            for(int j=0; j<n; j++){
                if(adj[node][j]==1 && !vis[j]){
                    vis[j]=1;
                    q.push(j);
                }
            }
        }
    }
    
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n=isConnected.size();
        vector<int>vis(n,0);
        int count=0;

        for(int i=0; i<n; i++){
            if(!vis[i]){
                vis[i]=1;
                bfs(isConnected,vis,i);
                count++;
            }
        }
        return count;
    }
};
