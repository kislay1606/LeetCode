class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int r=mat.size();
        int c=mat[0].size();

        vector<vector<int>>ans(r,vector<int>(c,0));

        queue<pair<pair<int,int>,int>>q; //<<row,col>,steps>
        vector<vector<int>>vis(r,vector<int>(c,0));

        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                if(mat[i][j]==0){
                    vis[i][j]=1;
                    ans[i][j]=0;
                    q.push({{i,j},0});
                }
                else vis[i][j]=0;
            }
        }
        
        int delrow[]={-1,1,0,0};
        int delcol[]={0,0,-1,1};

        while(!q.empty()){
            int row=q.front().first.first;
            int col=q.front().first.second;
            int step=q.front().second;

            ans[row][col]=step; //step should be added to ans before popping
            q.pop();

            for(int i=0; i<4; i++){
                int nrow=row+delrow[i];
                int ncol=col+delcol[i];

                if(nrow>=0 && nrow<r && ncol>=0 && ncol<c && mat[nrow][ncol]==1 && vis[nrow][ncol]!=1){
                    q.push({{nrow,ncol},step+1});
                    vis[nrow][ncol]=1;
                }
            }
        }
        return ans;
    }
};
