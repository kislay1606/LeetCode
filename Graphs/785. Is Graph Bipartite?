class Solution {
private:  
    bool dfs(vector<vector<int>>& graph, vector<int> &color,int col, int start){
        color[start]=col;

        for(auto neighbour: graph[start]){
            if(color[neighbour]==-1){
                if(dfs(graph,color,!col,neighbour)==false) return false;
            }
            else if(color[neighbour]==col) return false; //same color of neighbours
        }
        return true;
    }

public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<int>color(n,-1);
        
        for(int i=0; i<n; i++){
            if(color[i]==-1){
                if(dfs(graph,color,0,i)==false) return false;
            }
        }
        return true;
    }
};
