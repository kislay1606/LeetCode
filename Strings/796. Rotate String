//BRUTE
class Solution {
public:
    bool rotateString(string s, string goal) {
        int m=s.length();
        int n=goal.length();

        if(m != n)
        return false;

        for(int i=1; i<=m; i++){
            string temp=s;
            rotate(temp.begin(),temp.begin()+i,temp.end());

            if(temp==goal)
            return true;
        }
        return false;
    }
};

//OPTIMAL
class Solution {
public:
    bool rotateString(string s, string goal) {
        if(s.length() != goal.length())
        return false;
        
        string s1=s+s;

        //not found
        if(s1.find(goal) == string::npos)
        return false;
        
        else return true;
    }
};
