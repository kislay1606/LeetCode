//BRUTE TC->O(n^2*mlogm) SC->O(n)
class Solution {
private:
    bool isAnagram(string s1, string s2){
        sort(s1.begin(),s1.end());
        sort(s2.begin(),s2.end());
        if(s1==s2) return true;
        else return false;
    }      
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        int n=strs.size();
        vector<vector<string>>ans;

        vector<bool>used(n,false);

        for(int i=0; i<n; i++){
            if(used[i]) continue; //skip

            vector<string>group;
            group.push_back(strs[i]);
            used[i]=true;

            for(int j=0; j<n; j++){
                if(!used[j] && isAnagram(strs[i],strs[j])){
                    group.push_back(strs[j]);
                    used[j]=true;
                }
            }
            ans.push_back(group);
        }
        return ans;
    }
};
