//RECURSION
class Solution {
private:
    int solve(int i,int buy,vector<int>& prices,int count){
        int n=prices.size();
        int profit=0;

        //base case
        if(i>=n || count==2) return 0;

        //allowed to buy
        if(buy==1){
            int bought=-prices[i]+solve(i+1,0,prices,count);
            int notbought=0+solve(i+1,1,prices,count);
            profit=max(bought,notbought);
        }

        //not allowed to buy
        if(buy==0){
            int sell=prices[i]+solve(i+1,1,prices,count+1);
            int notsell=0+solve(i+1,0,prices,count);
            profit=max(sell,notsell);
        }
        return profit;
    }    
public:
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        return solve(0,1,prices,0);
    }
};
