class Solution {
  private:
    void inorder(Node* root,int &count){
        if(root==NULL) return;
        inorder(root->left,count);
        count++;
        inorder(root->right,count);
    }
    
    bool isBST(Node* root,int minVal,int maxVal){
        if(root==NULL) return true;
        
        if(root->data <= minVal || root->data >= maxVal){
            return false;  
        } 
        return isBST(root->left,minVal,root->data) && isBST(root->right,root->data,maxVal);
    }
    
  public:
    int largestBst(Node *root) {
        if(root==NULL) return 0;
        int maxCount=INT_MIN;
        
        if(isBST(root,INT_MIN,INT_MAX)){
            int count=0;
            inorder(root,count);
            maxCount=max(maxCount,count);
        }
        
        int leftCount=largestBst(root->left);
        int rightCount=largestBst(root->right);
        
        return max(maxCount,max(leftCount,rightCount));
    }
};
