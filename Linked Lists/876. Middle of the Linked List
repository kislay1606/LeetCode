//BRUTE 
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* temp=head;
        int count=0;

        while(temp != NULL){
            count++;
            temp=temp->next;
        }
        
        ListNode* mid=head;
        int midCount=0;
        while(mid != NULL){
            midCount++;
            if(midCount==count/2+1){
                return mid;
            }
            mid=mid->next;
        }
        return mid;
    }
};

//OPTIMAL OR TORTOISE APPROACH
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast != NULL && fast->next != NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
};
