//ITERATIVE APPROACH
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* curr=head;
        ListNode* prev=NULL;

        while(curr != NULL){
            ListNode* front=curr->next;
            curr->next=prev;
            prev=curr;
            curr=front;
        }
        return prev;
    }
};

//RECURSIVE APPROACH
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        //base case
        if(head==NULL || head->next==NULL) return head;

        ListNode* newHead=reverseList(head->next);

        ListNode* front=head->next;
        front->next=head;
        head->next=NULL;

        return newHead;
    }
};
