class Solution {
  public:
    string preToInfix(string exp) {
        int n=exp.length();
        stack<string>st;
        
        int i=n-1;
        while(i>=0){
            if(exp[i]>='a'&&exp[i]<='z' || exp[i]>='A'&&exp[i]<='Z' || exp[i]>='0'&&exp[i]<='9'){
                st.push(string(1,exp[i]));
            }
            
            else{
                string t1=st.top();
                st.pop();
                
                string t2=st.top();
                st.pop();
                
                string converted='(' + t1 + exp[i] + t2 + ')';
                st.push(converted);
            }
            i--;
        }
        return st.top();
    }
};
