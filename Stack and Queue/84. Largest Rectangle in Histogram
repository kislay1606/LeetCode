class Solution {
private:
    vector<int> NextSmallerElementIndex(vector<int>& arr){
        int n=arr.size();
        stack<int>st;
        vector<int>ans(n);

        for(int i=n-1; i>=0; i--){
            while(!st.empty() && arr[st.top()]>=arr[i]){
                st.pop();
            }

            if(st.empty()) ans[i]=n;
            else ans[i]=st.top();

            st.push(i);
        }
        return ans;
    }
    vector<int> PreviousSmallerElementIndex(vector<int>& arr){
        int n=arr.size();
        stack<int>st;
        vector<int>ans(n);

        for(int i=0; i<n; i++){
            while(!st.empty() && arr[st.top()]>=arr[i]){
                st.pop();
            }

            if(st.empty()) ans[i]=-1;
            else ans[i]=st.top();

            st.push(i);
        }
        return ans;
    }    
public:
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        vector<int>NSE=NextSmallerElementIndex(heights);
        vector<int>PSE=PreviousSmallerElementIndex(heights);
        int maxArea=INT_MIN;

        for(int i=0; i<n; i++){
            int width=NSE[i]-PSE[i]-1;
            int area=heights[i]*width;

            maxArea=max(area,maxArea);
        }
        return maxArea;
    }
};
