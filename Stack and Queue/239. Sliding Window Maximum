class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n=nums.size();
        vector<int>ans;
        deque<int>dq;

        for(int i=0; i<n; i++){
            //remove out of bound indices
            if(!dq.empty() && dq.front()<=i-k){
                dq.pop_front();
            }

            //Remove indices of all elements smaller than the current element to maintain decreasing order
            while(!dq.empty() && nums[dq.back()]<=nums[i]){
                dq.pop_back();
            }
            
            //push the index in deque
            dq.push_back(i);
              
            //push the front to the ans when a window is completed
            if(i>=k-1){
                ans.push_back(nums[dq.front()]);
            }
        }
        return ans;
    }
};
