//BRUTE FORCE
class StockSpanner {
    vector<int>arr;
public:
    StockSpanner() {

    }
    
    int next(int price) {
        
        arr.push_back(price);
        int n=arr.size();
        int count=1;

        for(int i=n-2; i>=0; i--){
            if(arr[i]<=price) count++;
            else break;
        }
        return count;
    }
};

//OPTIMAL
class StockSpanner {
    stack<pair<int,int>>st; //stack to store price and span
public:
    StockSpanner() {

    }
    
    int next(int price) {
        int span=1;
        while(!st.empty() && st.top().first<=price){
            span += st.top().second;
            st.pop();
        }

        st.push({price,span});

        return st.top().second;
    }
};
