class Solution {
private:
    int findLeftHeight(TreeNode* root){
        if(root==NULL) return 0;
        int count=0;
        TreeNode* curr=root;
        while(curr){
            count++;
            curr=curr->left;
        }
        return count;
    }
    int findRightHeight(TreeNode* root){
        if(root==NULL) return 0;
        int count=0;
        TreeNode* curr=root;
        while(curr){
            count++;
            curr=curr->right;
        }
        return count;
    }
public:
    int countNodes(TreeNode* root) {
        if(root==NULL) return 0;

        int LH=findLeftHeight(root);
        int RH=findRightHeight(root);

        if(LH==RH) return (1 << LH)-1; //no. of nodes in BBT = 2^height-1

        return 1+countNodes(root->left)+countNodes(root->right);
    }
};
