class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==NULL) return ans;

        queue<pair<TreeNode*,pair<int,int>>>q;
        map<int,map<int,multiset<int>>>mpp;

        q.push({root,{0,0}});
        while(!q.empty()){
            auto p=q.front();
            q.pop();

            TreeNode* node=p.first;
            int v=p.second.first;
            int l=p.second.second;

            mpp[v][l].insert(node->val);

            if(node->left) q.push({node->left,{v-1,l+1}});
            if(node->right) q.push({node->right,{v+1,l+1}});
        }
        for(auto p:mpp){
            vector<int>col;
            for(auto q:p.second){
                for(int val:q.second){
                    col.push_back(val);
                }
            }
            ans.push_back(col);
        }
        return ans;
    }
};
