vector<vector<int>> getTreeTraversal(TreeNode *root){
    vector<int>preorder;
    vector<int>inorder;
    vector<int>postorder;

    if(root==NULL) return{preorder,inorder,postorder};

    stack<pair<TreeNode*,int>>st;
    st.push({root,1});

    while(!st.empty()){
        TreeNode* node=st.top().first;
        int step=st.top().second;
        st.pop();

        if(step==1){
            preorder.push_back(node->data);
            st.push({node,2});
            if(node->left) st.push({node->left,1});
        }
        else if(step==2){
            inorder.push_back(node->data);
            st.push({node,3});
            if(node->right) st.push({node->right,1});
        }

        else postorder.push_back(node->data);
    }
    return {inorder,preorder,postorder};
}
