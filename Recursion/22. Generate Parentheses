class Solution {
private:
    void solve(int n,vector<string>&ans,string str,int open,int close){

        if(open==n && close==n){
            ans.push_back(str);
            return;
        }

        //pick '('
        if(open < n){
            solve(n,ans,str+'(',open+1,close);
        }

        //pick ')'
        if(close < open){
            solve(n,ans,str+')',open,close+1);
        }
    }    
public:
    vector<string> generateParenthesis(int n) {
        vector<string>ans;
        solve(n,ans,"",0,0);
        return ans;
    }
};
