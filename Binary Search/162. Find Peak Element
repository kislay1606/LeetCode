class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        int n=nums.size();

        //single element
        if(n==1)
        return 0;

        //first element is peak
        if(nums[0]>nums[1]){
            return 0;
        }
        //last element is peak
        if(nums[n-1]>nums[n-2]){
            return n-1;
        }

        int s=1;
        int e=n-2;

        while(s<=e){
            int mid=s+(e-s)/2;

            //mid element is peak
            if(nums[mid]>nums[mid-1] && nums[mid]>nums[mid+1]){
                return mid;
            }

            //peak is in left part so eliminate right part
            if(nums[mid]<nums[mid-1]){
                e=mid-1;
            }

            //peak is in the right so eliminate left part
            else{
                s=mid+1;
            }
        }
        return -1;
    }
};
